/*
 * Twitter API v2
 *
 * Twitter API v2 available endpoints
 *
 * API version: 2.54
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"time"
)

type Space struct {
	// Creation time of the Space.
	CreatedAt time.Time `json:"created_at,omitempty"`
	CreatorId string    `json:"creator_id,omitempty"`
	// End time of the Space.
	EndedAt time.Time `json:"ended_at,omitempty"`
	// The user ids for the hosts of the Space.
	HostIds []string `json:"host_ids,omitempty"`
	Id      string   `json:"id"`
	// An array of user ids for people who were invited to a Space.
	InvitedUserIds []string `json:"invited_user_ids,omitempty"`
	// Denotes if the Space is a ticketed Space.
	IsTicketed bool `json:"is_ticketed,omitempty"`
	// The language of the Space.
	Lang string `json:"lang,omitempty"`
	// The number of participants in a Space.
	ParticipantCount int32 `json:"participant_count,omitempty"`
	// A date time stamp for when a Space is scheduled to begin.
	ScheduledStart time.Time `json:"scheduled_start,omitempty"`
	// An array of user ids for people who were speakers in a Space.
	SpeakerIds []string `json:"speaker_ids,omitempty"`
	// When the Space was started as a date string.
	StartedAt time.Time `json:"started_at,omitempty"`
	// The current state of the Space.
	State string `json:"state"`
	// The number of people who have either purchased a ticket or set a reminder for this Space.
	SubscriberCount int32 `json:"subscriber_count,omitempty"`
	// The title of the Space.
	Title string `json:"title,omitempty"`
	// The topics of a Space, as selected by its creator.
	Topics []SpaceTopics `json:"topics,omitempty"`
	// When the Space was last updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
}
